/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

   :root {
    --main-color: #54028f;
    --color-fluor: #ff5e1f;
    --color-fluor-20: rgba(255, 94, 31, 0.2 );
    --shadow-color: 17deg 1000% 56%;
    --shadow-elevation-low:
    0.6px 0.5px 0.9px hsl(var(--shadow-color) / 0.09),
    1px 0.8px 1.5px -1.1px hsl(var(--shadow-color) / 0.09),
    2.5px 1.8px 3.6px -2.2px hsl(var(--shadow-color) / 0.1);
  --shadow-elevation-medium:
    0.6px 0.5px 0.9px hsl(var(--shadow-color) / 0.09),
    2.1px 1.6px 3.1px -0.7px hsl(var(--shadow-color) / 0.1),
    5.2px 3.8px 7.5px -1.5px hsl(var(--shadow-color) / 0.1),
    12.3px 9.1px 17.8px -2.2px hsl(var(--shadow-color) / 0.11);
  --shadow-elevation-high:
    0.6px 0.5px 0.9px hsl(var(--shadow-color) / 0.1),
    4.3px 3.2px 6.2px -0.4px hsl(var(--shadow-color) / 0.1),
    8.3px 6.1px 12px -0.7px hsl(var(--shadow-color) / 0.1),
    14.2px 10.5px 20.5px -1.1px hsl(var(--shadow-color) / 0.11),
    23.7px 17.6px 34.3px -1.5px hsl(var(--shadow-color) / 0.11),
    38.4px 28.5px 55.6px -1.9px hsl(var(--shadow-color) / 0.11),
    60px 44.5px 86.8px -2.2px hsl(var(--shadow-color) / 0.12);
}
body {
	background: #f4f4f4;
	font-family: 'Azeret Mono', monospace;
	width:100%;
}

#content {
	z-index: 999;
	background: #fff;
	color: var(--main-color);
	position: absolute;
	top: 50%;
	left: 50%;
	font-size: 1em;
	transform: translate3d(-50%, -50%, 0) rotate(1deg);
	/*   cursor: pointer; */
	margin: 0;
	padding: 0;
	display: block;
	max-width: 30vw;
	min-width: 480px;
	border-radius:0.15rem;
	overflow: visible;
  box-shadow: var(--shadow-elevation-high);
  
  border: 0.1rem solid var(--color-fluor);
  border-top: 0.125rem;
  border-left: 0.0125rem;
  
}
.contentWrapper {
	padding: 5vw;
	text-align: center;
	overflow: visible;
}

p.hello {
	font-size: clamp(0.875rem, 1.25vw + 0.688rem, 2.25rem);
	line-height: clamp(1.4rem, 1.2vw + 1.1rem, 2rem);
    font-weight: 700;
}

p.intro {
	font-size: clamp(0.675rem, 1vw + 0.688rem, 1.25rem);
	line-height: clamp(1.5rem, 1vw + 1.25rem, 1.5rem);
    font-weight: 400;
 }


p {
  font-size: clamp(0.475rem, 0.55vw + 0.688rem, 1rem);
  line-height: clamp(1.5rem, 1vw + 1.25rem, 1.25rem);
  font-weight: 400;
  width:100%;

}

p small {
  font-size: clamp(0.475rem, 0.25vw + 0.675rem, 0.675rem);
  line-height: clamp(0.875rem, 0.25vw + 0.275rem, 0.275rem);
  letter-spacing: -0.0125rem;
  font-weight: 300;
  width:100%;
}

.button{
	display: inline-block;
	padding:1rem;
	font-size: clamp(0.875rem, 1vw + 0.688rem, 1.25rem);
	line-height: clamp(1.24rem, 1.2vw + 1.1rem, 2rem);
    font-weight: 700;
    text-decoration: none;
    background: var(--color-fluor);
    color:white;
	margin-top;54px;
	border-radius:20% 5% 10% 12%;
	transition: transform 0.2s cubic-bezier(0.68, -0.6, 0.32, 1.6);
}

.button:hover {
	transform: rotate(-2deg) scale(1.2);
} 

@media only screen and (max-width: 600px) {
	#content {
  		transform: translate3d(-50%, -35%, 0);
  		/*   cursor: pointer; */
  		margin: 0;
  		padding: 0;
  		display: block;
  		min-width: 320px;
  		max-width:80vw;  
  		border-radius:5%;
  		overflow: hidden;
	}
	.contentWrapper {
		padding: 5vw;
	}
	.button {
		padding:1rem;
		font-size: clamp(0.875rem, 1.25vw + 0.688rem, 1.25rem);
		line-height: clamp(1.2rem, 1.2vw + 1.1rem, 2rem);
	}
	  
}


/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .sr-only class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: " ";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

